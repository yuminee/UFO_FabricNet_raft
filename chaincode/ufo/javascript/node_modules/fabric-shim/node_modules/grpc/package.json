{
  "_args": [
    [
      "grpc@https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
      "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim"
    ]
  ],
  "_from": "grpc@https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
  "_id": "grpc@1.24.3",
  "_inCache": true,
  "_location": "/fabric-shim/grpc",
  "_phantomChildren": {},
  "_requested": {
    "name": "grpc",
    "raw": "grpc@https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
    "rawSpec": "https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/fabric-shim"
  ],
  "_resolved": "https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
  "_shasum": "92efe28dfc1250dca179b8133e40b4f2341473d9",
  "_shrinkwrap": null,
  "_spec": "grpc@https://registry.npmjs.org/grpc/-/grpc-1.24.3.tgz",
  "_where": "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim",
  "author": {
    "name": "Google Inc."
  },
  "binary": {
    "host": "https://node-precompiled-binaries.grpc.io/",
    "module_name": "grpc_node",
    "module_path": "src/node/extension_binary/{node_abi}-{platform}-{arch}-{libc}",
    "package_name": "{node_abi}-{platform}-{arch}-{libc}.tar.gz",
    "remote_path": "{name}/v{version}"
  },
  "bugs": {
    "url": "https://github.com/grpc/grpc-node/issues"
  },
  "contributors": [
    {
      "name": "Michael Lumish",
      "email": "mlumish@google.com"
    }
  ],
  "dependencies": {
    "@types/bytebuffer": "^5.0.40",
    "lodash.camelcase": "^4.3.0",
    "lodash.clone": "^4.5.0",
    "nan": "^2.13.2",
    "node-pre-gyp": "^0.15.0",
    "protobufjs": "^5.0.3"
  },
  "description": "gRPC Library for Node",
  "devDependencies": {
    "body-parser": "^1.15.2",
    "electron-mocha": "^3.1.1",
    "express": "^4.14.0",
    "google-protobuf": "^3.0.0",
    "istanbul": "^0.4.4",
    "lodash": "^4.17.4",
    "minimist": "^1.1.0",
    "node-forge": "^0.7.5",
    "poisson-process": "^0.2.1"
  },
  "directories": {
    "lib": "src"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "LICENSE",
    "README.md",
    "binding.gyp",
    "deps/grpc/etc/",
    "deps/grpc/include/grpc/**/*.h",
    "deps/grpc/src/boringssl/err_data.c",
    "deps/grpc/src/core/**/*.{c,cc,h}",
    "deps/grpc/third_party/abseil-cpp/absl/**/*.{h,hh,inc}",
    "deps/grpc/third_party/address_sorting/**/*.{c,h}",
    "deps/grpc/third_party/boringssl/crypto/**/*.{c,cc,h}",
    "deps/grpc/third_party/boringssl/include/**/*.{c,cc,h}",
    "deps/grpc/third_party/boringssl/ssl/**/*.{c,cc,h}",
    "deps/grpc/third_party/boringssl/third_party/**/*.{c,h}",
    "deps/grpc/third_party/cares/**/*.{c,h}",
    "deps/grpc/third_party/nanopb/*.{c,cc,h}",
    "deps/grpc/third_party/upb/**/*.{c,h,inc}",
    "deps/grpc/third_party/zlib/**/*.{c,cc,h}",
    "ext/*.{cc,h}",
    "index.d.ts",
    "index.js",
    "src/*.js"
  ],
  "homepage": "https://grpc.io/",
  "jshintConfig": {
    "bitwise": true,
    "curly": true,
    "eqeqeq": true,
    "esnext": true,
    "freeze": true,
    "immed": true,
    "indent": 2,
    "latedef": "nofunc",
    "maxlen": 80,
    "mocha": true,
    "newcap": true,
    "noarg": true,
    "node": true,
    "quotmark": "single",
    "strict": true,
    "trailing": true,
    "undef": true,
    "unused": "vars"
  },
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "grpc",
  "optionalDependencies": {},
  "readme": "[![npm](https://img.shields.io/npm/v/grpc.svg)](https://www.npmjs.com/package/grpc)\n# Node.js gRPC Library\n\n**This library is now only receiving bug fixes and runtime compatibility updates. In April 2021 it will be deprecated and will no longer receive any updates.**\n\n## PREREQUISITES\n- `node`: This requires `node` to be installed, version `4.0` or above. If you instead have the `nodejs` executable on Debian, you should install the [`nodejs-legacy`](https://packages.debian.org/sid/nodejs-legacy) package.\n\n- **Note:** If you installed `node` via a package manager and the version is still less than `4.0`, try directly installing it from [nodejs.org](https://nodejs.org).\n\n## INSTALLATION\n\nInstall the gRPC NPM package\n\n```sh\nnpm install grpc\n```\n\n## BUILD FROM SOURCE\n\nThe following command can be used to build from source when installing the package from npm:\n\n```\nnpm install grpc --build-from-source\n```\n\nThe `--build-from-source` option will work even when installing another package that depends on `grpc`. To build only `grpc` from source, you can use the argument `--build-from-source=grpc`.\n\n## ABOUT ELECTRON\n\nThe official electron documentation recommends to [build all of your native packages from source](https://electronjs.org/docs/tutorial/using-native-node-modules#modules-that-rely-on-node-pre-gyp). While the reasons behind this are technically good - many native extensions won't be packaged to work properly with electron - the gRPC source code is fairly difficult to build from source due to its complex nature, and we're also providing working electron pre-built binaries. Therefore, we recommend that you do not follow this model for using gRPC with electron. Also, for the same reason, `electron-rebuild` will always build from source. We advise you to not use this tool if you are depending on gRPC. Please note that there's not just one way to get native extensions running in electron, and that there's never any silver bullet for anything. The following instructions try to cater about some of the most generic ways, but different edge cases might require different methodologies.\n\nThe best way to get gRPC to work with electron is to do this, possibly in the `postinstall` script of your `package.json` file:\n\n```\nnpm rebuild --target=2.0.0 --runtime=electron --dist-url=https://atom.io/download/electron\n```\n\nNote that the `2.0.0` above is the electron runtime version number. You will need to update this every time you go on a different version of the runtime.\n\nIf you have more native dependencies than gRPC, and they work better when built from source, you can explicitely specify which extension to build the following way:\n\n```\nnpm rebuild --build-from-source=sqlite3 --target=2.0.0 --runtime=electron --dist-url=https://atom.io/download/electron\n```\n\nThis way, if you depend on both `grpc` and `sqlite3`, only the `sqlite3` package will be rebuilt from source, leaving the `grpc` package to use its precompiled binaries.\n\n## BUILD IN GIT REPOSITORY\n\n 1. Clone [the grpc-node Git Repository](https://github.com/grpc/grpc-node).\n 2. Run `git submodule update --init --recursive` from the repository root.\n 3. Run `cd packages/grpc-native-core`.\n 4. Run `npm install --build-from-source`.\n\n - **Note:** On Windows, this might fail due to [nodejs issue #4932](https://github.com/nodejs/node/issues/4932) in which case, you will see something like the following in `npm install`'s output (towards the very beginning):\n\n    ```\n     ..\n     Building the projects in this solution one at a time. To enable parallel build, please add the \"/m\" switch.\n     WINDOWS_BUILD_WARNING\n      \"..\\IMPORTANT: Due to https:\\github.com\\nodejs\\node\\issues\\4932, to build this library on Windows, you must first remove C:\\Users\\jenkins\\.node-gyp\\4.4.0\\include\\node\\openssl\"\n      ...\n      ..\n    ```\n\n    To fix this, you will have to delete the folder `C:\\Users\\<username>\\.node-gyp\\<node_version>\\include\\node\\openssl` and retry `npm install`\n\n## CONFIGURE BINARIES' LOCATION\n\nYou can configure the location from which the pre-compiled binaries are downloaded during installation.\n\n`npm install --grpc_node_binary_host_mirror=https://your-url.com`\n\nOr defining `grpc_node_binary_host_mirror` in your `.npmrc`.\n\n## API DOCUMENTATION\n\nSee the [API Documentation](https://grpc.io/grpc/node/).\n\n## TESTING\nTo run the test suite, simply run `npm test` in the install location.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/grpc/grpc-node.git"
  },
  "scripts": {
    "build": "node-pre-gyp build",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha test",
    "electron-build": "node-pre-gyp configure build --runtime=electron --disturl=https://atom.io/download/atom-shell",
    "install": "node-pre-gyp install --fallback-to-build --library=static_library",
    "prepack": "git submodule update --init --recursive && npm install"
  },
  "typings": "index.d.ts",
  "version": "1.24.3"
}
