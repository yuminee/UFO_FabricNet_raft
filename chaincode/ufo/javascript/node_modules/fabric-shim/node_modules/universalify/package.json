{
  "_args": [
    [
      "universalify@https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
      "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim"
    ]
  ],
  "_from": "universalify@https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
  "_id": "universalify@0.1.2",
  "_inCache": true,
  "_location": "/fabric-shim/universalify",
  "_phantomChildren": {},
  "_requested": {
    "name": "universalify",
    "raw": "universalify@https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/fabric-shim/fs-extra"
  ],
  "_resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
  "_shasum": "b646f69be3942dabcecc9d6639c80dc105efaa66",
  "_shrinkwrap": null,
  "_spec": "universalify@https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",
  "_where": "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim",
  "author": {
    "email": "opensrc@ryanzim.com",
    "name": "Ryan Zimmerman"
  },
  "bugs": {
    "url": "https://github.com/RyanZim/universalify/issues"
  },
  "dependencies": {},
  "description": "Make a callback- or promise-based function support both promises and callbacks.",
  "devDependencies": {
    "colortape": "^0.1.2",
    "coveralls": "^3.0.1",
    "nyc": "^10.2.0",
    "standard": "^10.0.1",
    "tape": "^4.6.3"
  },
  "engines": {
    "node": ">= 4.0.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/RyanZim/universalify#readme",
  "keywords": [
    "callback",
    "native",
    "promise"
  ],
  "license": "MIT",
  "name": "universalify",
  "optionalDependencies": {},
  "readme": "# universalify\n\n[![Travis branch](https://img.shields.io/travis/RyanZim/universalify/master.svg)](https://travis-ci.org/RyanZim/universalify)\n![Coveralls github branch](https://img.shields.io/coveralls/github/RyanZim/universalify/master.svg)\n![npm](https://img.shields.io/npm/dm/universalify.svg)\n![npm](https://img.shields.io/npm/l/universalify.svg)\n\nMake a callback- or promise-based function support both promises and callbacks.\n\nUses the native promise implementation.\n\n## Installation\n\n```bash\nnpm install universalify\n```\n\n## API\n\n### `universalify.fromCallback(fn)`\n\nTakes a callback-based function to universalify, and returns the universalified  function.\n\nFunction must take a callback as the last parameter that will be called with the signature `(error, result)`. `universalify` does not support calling the callback with more than three arguments, and does not ensure that the callback is only called once.\n\n```js\nfunction callbackFn (n, cb) {\n  setTimeout(() => cb(null, n), 15)\n}\n\nconst fn = universalify.fromCallback(callbackFn)\n\n// Works with Promises:\nfn('Hello World!')\n.then(result => console.log(result)) // -> Hello World!\n.catch(error => console.error(error))\n\n// Works with Callbacks:\nfn('Hi!', (error, result) => {\n  if (error) return console.error(error)\n  console.log(result)\n  // -> Hi!\n})\n```\n\n### `universalify.fromPromise(fn)`\n\nTakes a promise-based function to universalify, and returns the universalified  function.\n\nFunction must return a valid JS promise. `universalify` does not ensure that a valid promise is returned.\n\n```js\nfunction promiseFn (n) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(n), 15)\n  })\n}\n\nconst fn = universalify.fromPromise(promiseFn)\n\n// Works with Promises:\nfn('Hello World!')\n.then(result => console.log(result)) // -> Hello World!\n.catch(error => console.error(error))\n\n// Works with Callbacks:\nfn('Hi!', (error, result) => {\n  if (error) return console.error(error)\n  console.log(result)\n  // -> Hi!\n})\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RyanZim/universalify.git"
  },
  "scripts": {
    "test": "standard && nyc tape test/*.js | colortape"
  },
  "version": "0.1.2"
}
