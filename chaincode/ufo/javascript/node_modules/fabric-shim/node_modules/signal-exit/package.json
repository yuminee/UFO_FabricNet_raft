{
  "_args": [
    [
      "signal-exit@https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
      "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim"
    ]
  ],
  "_from": "signal-exit@https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
  "_id": "signal-exit@3.0.3",
  "_inCache": true,
  "_location": "/fabric-shim/signal-exit",
  "_phantomChildren": {},
  "_requested": {
    "name": "signal-exit",
    "raw": "signal-exit@https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
    "rawSpec": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/fabric-shim/gauge"
  ],
  "_resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
  "_shasum": "a1410c2edd8f077b08b4e253c8eacfcaf057461c",
  "_shrinkwrap": null,
  "_spec": "signal-exit@https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.3.tgz",
  "_where": "/home/yumin/UFO_FabricNet_raft/chaincode/ufo/javascript/node_modules/fabric-shim",
  "author": {
    "email": "ben@npmjs.com",
    "name": "Ben Coe"
  },
  "bugs": {
    "url": "https://github.com/tapjs/signal-exit/issues"
  },
  "dependencies": {},
  "description": "when you want to fire an event no matter how a process exits.",
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.10",
    "nyc": "^8.1.0",
    "standard": "^8.1.0",
    "standard-version": "^2.3.0",
    "tap": "^8.0.1"
  },
  "files": [
    "index.js",
    "signals.js"
  ],
  "homepage": "https://github.com/tapjs/signal-exit",
  "keywords": [
    "exit",
    "signal"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "signal-exit",
  "optionalDependencies": {},
  "readme": "# signal-exit\n\n[![Build Status](https://travis-ci.org/tapjs/signal-exit.png)](https://travis-ci.org/tapjs/signal-exit)\n[![Coverage](https://coveralls.io/repos/tapjs/signal-exit/badge.svg?branch=master)](https://coveralls.io/r/tapjs/signal-exit?branch=master)\n[![NPM version](https://img.shields.io/npm/v/signal-exit.svg)](https://www.npmjs.com/package/signal-exit)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nWhen you want to fire an event no matter how a process exits:\n\n* reaching the end of execution.\n* explicitly having `process.exit(code)` called.\n* having `process.kill(pid, sig)` called.\n* receiving a fatal signal from outside the process\n\nUse `signal-exit`.\n\n```js\nvar onExit = require('signal-exit')\n\nonExit(function (code, signal) {\n  console.log('process exited!')\n})\n```\n\n## API\n\n`var remove = onExit(function (code, signal) {}, options)`\n\nThe return value of the function is a function that will remove the\nhandler.\n\nNote that the function *only* fires for signals if the signal would\ncause the proces to exit.  That is, there are no other listeners, and\nit is a fatal signal.\n\n## Options\n\n* `alwaysLast`: Run this handler after any other signal or exit\n  handlers.  This causes `process.emit` to be monkeypatched.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tapjs/signal-exit.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "pretest": "standard",
    "release": "standard-version",
    "test": "tap --timeout=240 ./test/*.js --cov"
  },
  "version": "3.0.3"
}
